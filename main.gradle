subprojects {
    apply plugin: "java"
    apply plugin: "jacoco"
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.sonarqube'

    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    repositories {
        mavenCentral()
        google()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }

    }

    dependencies {
        testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
        testImplementation "org.springframework.boot:spring-boot-starter:${springBootVersion}"
        testImplementation "io.projectreactor:reactor-test:${reactorVersion}"
        testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
        testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
        testImplementation group: 'junit', name: 'junit', version: '4.12'
        testImplementation "org.mockito:mockito-core:${mockitoVersion}"


        implementation "io.projectreactor:reactor-core:${reactorVersion}"
        implementation "io.projectreactor.addons:reactor-extra:${reactorExtraVersion}"

        implementation "com.google.code.gson:gson:${gsonVersion}"

        implementation "org.springdoc:springdoc-openapi-webflux-ui:${springDoc}"


        implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonDataTypejsrVersion}"


        compileOnly "org.projectlombok:lombok:${lombokVersion}"
        annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
        testCompileOnly "org.projectlombok:lombok:${lombokVersion}"


    }

    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport
    }

    jacoco {
        toolVersion = '0.8.7'
    }
    sonarqube {
        properties {
            property "sonar.sources", "."
            property "sonar.exclusions", "**/src/test/java/**, **/resources/**"
            property "sonar.projectKey", "apicuida"
            property "sonar.scm.provider", "git"
            property "sonar.scm.disabled", "true"
            property "sonar.host.url", "http://localhost:9000"
            property "sonar.login", "9ca4770e46d5b063aac92e9e16a369c9abf0c21f"
        }
    }
    jacocoTestReport {
        dependsOn test
        reports {
            xml.enabled true
        }
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

}
